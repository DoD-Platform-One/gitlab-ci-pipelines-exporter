{{- if .Values.gcpeJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: gitlab-exporter-token
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
spec:
  template:
    metadata:
      name: gitlab-exporter-token
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        {{- include "app.labels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: true
      serviceAccountName: exporter-token-sa
      restartPolicy: Never
      {{- with .Values.gcpeJob.image.pullSecrets }}
      imagePullSecrets:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: gitlab-exporter-token
        image: {{ .Values.gcpeJob.image.repository }}:{{ .Values.gcpeJob.image.tag }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command: ["/bin/bash"]
        args:
            - -c
            - >-
              token_string=$(head -c 128 /dev/urandom | sha256sum | head -c 32 | awk '{print "glpat-"$1}') && kubectl -n gitlab exec -ti deploy/gitlab-toolbox -- gitlab-rails runner "t=User.find_by_username('root').personal_access_tokens.new(name: 'ci-exporter-token', scopes:['api'], expires_at: 1.year.from_now.utc); t.set_token('${token_string}'); t.save" && kubectl create secret -n ${POD_NAMESPACE} generic gitlab-ci-exporter-token --from-literal=gitlabToken=${token_string} --dry-run=client -o yaml | kubectl apply -f -
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
              - ALL
{{- end }}

